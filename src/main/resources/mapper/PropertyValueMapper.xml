<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.incolor.mapper.PropertyValueMapper">
    <resultMap id="BaseResultMap" type="vip.incolor.entity.PropertyValue">
        <id column="property_value_id" jdbcType="INTEGER" property="property_value_id"/>
        <result column="property_id" jdbcType="INTEGER" property="property_id"/>
        <result column="product_id" jdbcType="INTEGER" property="product_id"/>
        <result column="property_value" jdbcType="VARCHAR" property="property_value"/>
        <result column="property_price" jdbcType="DOUBLE" property="property_price"/>
        <result column="property_value_create_time" jdbcType="TIMESTAMP" property="property_value_create_time"/>
        <result column="property_value_update_time" jdbcType="TIMESTAMP" property="property_value_update_time"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        property_value_id, property_id, product_id, property_value, property_price, property_value_create_time,
        property_value_update_time
    </sql>
    <select id="selectByExample" parameterType="vip.incolor.entity.PropertyValueExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from property_value
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from property_value
        where property_value_id = #{property_value_id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM property_value
        WHERE property_value_id = #{property_value_id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.incolor.entity.PropertyValue">
        INSERT INTO property_value (property_value_id, property_id, product_id,
                                    property_value, property_price, property_value_create_time,
                                    property_value_update_time)
        VALUES (#{property_value_id,jdbcType=INTEGER}, #{property_id,jdbcType=INTEGER}, #{product_id,jdbcType=INTEGER},
                #{property_value,jdbcType=VARCHAR}, #{property_price,jdbcType=DOUBLE},
                #{property_value_create_time,jdbcType=TIMESTAMP},
                #{property_value_update_time,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="vip.incolor.entity.PropertyValue">
        insert into property_value
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="property_value_id != null">
                property_value_id,
            </if>
            <if test="property_id != null">
                property_id,
            </if>
            <if test="product_id != null">
                product_id,
            </if>
            <if test="property_value != null">
                property_value,
            </if>
            <if test="property_price != null">
                property_price,
            </if>
            <if test="property_value_create_time != null">
                property_value_create_time,
            </if>
            <if test="property_value_update_time != null">
                property_value_update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="property_value_id != null">
                #{property_value_id,jdbcType=INTEGER},
            </if>
            <if test="property_id != null">
                #{property_id,jdbcType=INTEGER},
            </if>
            <if test="product_id != null">
                #{product_id,jdbcType=INTEGER},
            </if>
            <if test="property_value != null">
                #{property_value,jdbcType=VARCHAR},
            </if>
            <if test="property_price != null">
                #{property_price,jdbcType=DOUBLE},
            </if>
            <if test="property_value_create_time != null">
                #{property_value_create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="property_value_update_time != null">
                #{property_value_update_time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.incolor.entity.PropertyValue">
        update property_value
        <set>
            <if test="property_id != null">
                property_id = #{property_id,jdbcType=INTEGER},
            </if>
            <if test="product_id != null">
                product_id = #{product_id,jdbcType=INTEGER},
            </if>
            <if test="property_value != null">
                property_value = #{property_value,jdbcType=VARCHAR},
            </if>
            <if test="property_price != null">
                property_price = #{property_price,jdbcType=DOUBLE},
            </if>
            <if test="property_value_create_time != null">
                property_value_create_time = #{property_value_create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="property_value_update_time != null">
                property_value_update_time = #{property_value_update_time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where property_value_id = #{property_value_id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.incolor.entity.PropertyValue">
        UPDATE property_value
        SET property_id                = #{property_id,jdbcType=INTEGER},
            product_id                 = #{product_id,jdbcType=INTEGER},
            property_value             = #{property_value,jdbcType=VARCHAR},
            property_price             = #{property_price,jdbcType=DOUBLE},
            property_value_create_time = #{property_value_create_time,jdbcType=TIMESTAMP},
            property_value_update_time = #{property_value_update_time,jdbcType=TIMESTAMP}
        WHERE property_value_id = #{property_value_id,jdbcType=INTEGER}
    </update>
    <!-- 查询出产品的属性值和名-->
    <select id="selectByProductId" parameterType="java.lang.Integer" resultType="vip.incolor.vo.PropertyVO">
        SELECT
            p.property_id        propertyId,
            p.property_name      propertyName,
            pv.property_value_id propertyValueId,
            pv.property_value    propertyValue,
            pv.property_price    propertyPrice,
            pv.product_id        productId
        FROM property p, property_value pv
        WHERE pv.product_id = #{productId} AND pv.property_id = p.property_id
    </select>
</mapper>
