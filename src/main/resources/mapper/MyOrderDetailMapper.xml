<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.incolor.mapper.MyOrderDetailMapper">
  <resultMap id="BaseResultMap" type="vip.incolor.entity.MyOrderDetail">
    <id column="order_detail_id" jdbcType="INTEGER" property="order_detail_id" />
    <result column="order_id" jdbcType="INTEGER" property="order_id" />
    <result column="product_id" jdbcType="INTEGER" property="product_id" />
    <result column="order_create_time" jdbcType="TIMESTAMP" property="order_create_time" />
    <result column="order_update_time" jdbcType="TIMESTAMP" property="order_update_time" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_detail_id, order_id, product_id, order_create_time, order_update_time, number
  </sql>
  <select id="selectByExample" parameterType="vip.incolor.entity.MyOrderDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from order_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where order_detail_id = #{order_detail_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_detail
    where order_detail_id = #{order_detail_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="vip.incolor.entity.MyOrderDetail">
    insert into order_detail (order_detail_id, order_id, product_id, 
      order_create_time, order_update_time, 
      number)
    values (#{order_detail_id,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER}, #{product_id,jdbcType=INTEGER}, 
      #{order_create_time,jdbcType=TIMESTAMP}, #{order_update_time,jdbcType=TIMESTAMP}, 
      #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="vip.incolor.entity.MyOrderDetail">
    insert into order_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="order_detail_id != null">
        order_detail_id,
      </if>
      <if test="order_id != null">
        order_id,
      </if>
      <if test="product_id != null">
        product_id,
      </if>
      <if test="order_create_time != null">
        order_create_time,
      </if>
      <if test="order_update_time != null">
        order_update_time,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="order_detail_id != null">
        #{order_detail_id,jdbcType=INTEGER},
      </if>
      <if test="order_id != null">
        #{order_id,jdbcType=INTEGER},
      </if>
      <if test="product_id != null">
        #{product_id,jdbcType=INTEGER},
      </if>
      <if test="order_create_time != null">
        #{order_create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="order_update_time != null">
        #{order_update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vip.incolor.entity.MyOrderDetail">
    update order_detail
    <set>
      <if test="order_id != null">
        order_id = #{order_id,jdbcType=INTEGER},
      </if>
      <if test="product_id != null">
        product_id = #{product_id,jdbcType=INTEGER},
      </if>
      <if test="order_create_time != null">
        order_create_time = #{order_create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="order_update_time != null">
        order_update_time = #{order_update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where order_detail_id = #{order_detail_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.incolor.entity.MyOrderDetail">
    update order_detail
    set order_id = #{order_id,jdbcType=INTEGER},
      product_id = #{product_id,jdbcType=INTEGER},
      order_create_time = #{order_create_time,jdbcType=TIMESTAMP},
      order_update_time = #{order_update_time,jdbcType=TIMESTAMP},
      number = #{number,jdbcType=INTEGER}
    where order_detail_id = #{order_detail_id,jdbcType=INTEGER}
  </update>
</mapper>