<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.incolor.mapper.OrderInformationMapper">
    <resultMap id="BaseResultMap" type="vip.incolor.entity.OrderInformation">
        <id column="order_information_id" jdbcType="INTEGER" property="order_information_id"/>
        <result column="order_id" jdbcType="INTEGER" property="order_id"/>
        <result column="product_id" jdbcType="INTEGER" property="product_id"/>
        <result column="user_id" jdbcType="INTEGER" property="user_id"/>
        <result column="order_pay_id" jdbcType="INTEGER" property="order_pay_id"/>
        <result column="order_expressway_id" jdbcType="INTEGER" property="order_expressway_id"/>
        <result column="order_number" jdbcType="INTEGER" property="order_number"/>
        <result column="order_create_time" jdbcType="TIMESTAMP" property="order_create_time"/>
        <result column="order_update_time" jdbcType="TIMESTAMP" property="order_update_time"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        order_information_id, order_id, product_id, user_id, order_pay_id, order_expressway_id,
        order_number, order_create_time, order_update_time
    </sql>
    <select id="selectByExample" parameterType="vip.incolor.entity.OrderInformationExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from order_information
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_information
        where order_information_id = #{order_information_id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM order_information
        WHERE order_information_id = #{order_information_id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="vip.incolor.entity.OrderInformation">
        INSERT INTO order_information (order_information_id, order_id,
                                       user_id, order_pay_id, order_expressway_id,
                                       order_create_time, order_update_time
        )
        VALUES (#{order_information_id,jdbcType=INTEGER}, #{order_id,jdbcType=INTEGER},
                #{user_id,jdbcType=INTEGER}, #{order_pay_id,jdbcType=INTEGER}, #{order_expressway_id,jdbcType=INTEGER},
                #{order_create_time,jdbcType=TIMESTAMP}, #{order_update_time,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="vip.incolor.entity.OrderInformation">
        insert into order_information
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="order_information_id != null">
                order_information_id,
            </if>
            <if test="order_id != null">
                order_id,
            </if>
            <if test="product_id != null">
                product_id,
            </if>
            <if test="user_id != null">
                user_id,
            </if>
            <if test="order_pay_id != null">
                order_pay_id,
            </if>
            <if test="order_expressway_id != null">
                order_expressway_id,
            </if>
            <if test="order_number != null">
                order_number,
            </if>
            <if test="order_create_time != null">
                order_create_time,
            </if>
            <if test="order_update_time != null">
                order_update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="order_information_id != null">
                #{order_information_id,jdbcType=INTEGER},
            </if>
            <if test="order_id != null">
                #{order_id,jdbcType=INTEGER},
            </if>
            <if test="product_id != null">
                #{product_id,jdbcType=INTEGER},
            </if>
            <if test="user_id != null">
                #{user_id,jdbcType=INTEGER},
            </if>
            <if test="order_pay_id != null">
                #{order_pay_id,jdbcType=INTEGER},
            </if>
            <if test="order_expressway_id != null">
                #{order_expressway_id,jdbcType=INTEGER},
            </if>
            <if test="order_number != null">
                #{order_number,jdbcType=INTEGER},
            </if>
            <if test="order_create_time != null">
                #{order_create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="order_update_time != null">
                #{order_update_time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="vip.incolor.entity.OrderInformation">
        update order_information
        <set>
            <if test="order_id != null">
                order_id = #{order_id,jdbcType=INTEGER},
            </if>
            <if test="product_id != null">
                product_id = #{product_id,jdbcType=INTEGER},
            </if>
            <if test="user_id != null">
                user_id = #{user_id,jdbcType=INTEGER},
            </if>
            <if test="order_pay_id != null">
                order_pay_id = #{order_pay_id,jdbcType=INTEGER},
            </if>
            <if test="order_expressway_id != null">
                order_expressway_id = #{order_expressway_id,jdbcType=INTEGER},
            </if>
            <if test="order_number != null">
                order_number = #{order_number,jdbcType=INTEGER},
            </if>
            <if test="order_create_time != null">
                order_create_time = #{order_create_time,jdbcType=TIMESTAMP},
            </if>
            <if test="order_update_time != null">
                order_update_time = #{order_update_time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where order_information_id = #{order_information_id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="vip.incolor.entity.OrderInformation">
        UPDATE order_information
        SET order_id            = #{order_id,jdbcType=INTEGER},
            product_id          = #{product_id,jdbcType=INTEGER},
            user_id             = #{user_id,jdbcType=INTEGER},
            order_pay_id        = #{order_pay_id,jdbcType=INTEGER},
            order_expressway_id = #{order_expressway_id,jdbcType=INTEGER},
            order_number        = #{order_number,jdbcType=INTEGER},
            order_create_time   = #{order_create_time,jdbcType=TIMESTAMP},
            order_update_time   = #{order_update_time,jdbcType=TIMESTAMP}
        WHERE order_information_id = #{order_information_id,jdbcType=INTEGER}
    </update>
</mapper>
