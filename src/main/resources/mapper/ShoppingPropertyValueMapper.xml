<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="vip.incolor.mapper.ShoppingPropertyValueMapper">
  <resultMap id="BaseResultMap" type="vip.incolor.entity.ShoppingPropertyValue">
    <id column="shopping_property_value_id" jdbcType="INTEGER" property="shopping_property_value_id" />
    <result column="shopping_property_value" jdbcType="VARCHAR" property="shopping_property_value" />
    <result column="shopping_detail_id" jdbcType="INTEGER" property="shopping_detail_id" />
    <result column="shopping_property_id" jdbcType="INTEGER" property="shopping_property_id" />
    <result column="shopping_property_value_create_time" jdbcType="TIMESTAMP" property="shopping_property_value_create_time" />
    <result column="shopping_property_value_update_time" jdbcType="TIMESTAMP" property="shopping_property_value_update_time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    shopping_property_value_id, shopping_property_value, shopping_detail_id, shopping_property_id, shopping_property_value_create_time,
    shopping_property_value_update_time
  </sql>
  <select id="selectByExample" parameterType="vip.incolor.entity.ShoppingPropertyValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from shopping_property_value
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shopping_property_value
    where shopping_property_value_id = #{shopping_property_value_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopping_property_value
    where shopping_property_value_id = #{shopping_property_value_id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="vip.incolor.entity.ShoppingPropertyValue">
    insert into shopping_property_value (shopping_property_value_id, shopping_property_value,shopping_detail_id,
      shopping_property_id, shopping_property_value_create_time, 
      shopping_property_value_update_time)
    values (#{shopping_property_value_id,jdbcType=INTEGER}, #{shopping_property_value,jdbcType=VARCHAR}, #{shopping_detail_id,jdbcType=INTEGER},
      #{shopping_property_id,jdbcType=INTEGER}, #{shopping_property_value_create_time,jdbcType=TIMESTAMP}, 
      #{shopping_property_value_update_time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="vip.incolor.entity.ShoppingPropertyValue">
    insert into shopping_property_value
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="shopping_property_value_id != null">
        shopping_property_value_id,
      </if>
      <if test="shopping_property_value != null">
        shopping_property_value,
      </if>
      <if test="shopping_detail_id != null">
        shopping_detail_id,
      </if>
      <if test="shopping_property_id != null">
        shopping_property_id,
      </if>
      <if test="shopping_property_value_create_time != null">
        shopping_property_value_create_time,
      </if>
      <if test="shopping_property_value_update_time != null">
        shopping_property_value_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="shopping_property_value_id != null">
        #{shopping_property_value_id,jdbcType=INTEGER},
      </if>
      <if test="shopping_property_value != null">
        #{shopping_property_value,jdbcType=VARCHAR},
      </if>
      <if test="shopping_property_id != null">
        #{shopping_property_id,jdbcType=INTEGER},
      </if>
      <if test="shopping_property_value_create_time != null">
        #{shopping_property_value_create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="shopping_property_value_update_time != null">
        #{shopping_property_value_update_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="vip.incolor.entity.ShoppingPropertyValue">
    update shopping_property_value
    <set>
      <if test="shopping_property_value != null">
        shopping_property_value = #{shopping_property_value,jdbcType=VARCHAR},
      </if>
      <if test="shopping_detail_id != null">
        shopping_detail_id = #{shopping_detail_id,jdbcType=INTEGER},
      </if>
      <if test="shopping_property_id != null">
        shopping_property_id = #{shopping_property_id,jdbcType=INTEGER},
      </if>
      <if test="shopping_property_value_create_time != null">
        shopping_property_value_create_time = #{shopping_property_value_create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="shopping_property_value_update_time != null">
        shopping_property_value_update_time = #{shopping_property_value_update_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where shopping_property_value_id = #{shopping_property_value_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="vip.incolor.entity.ShoppingPropertyValue">
    update shopping_property_value
    set shopping_property_value = #{shopping_property_value,jdbcType=VARCHAR},
      shopping_detail_id = #{shopping_detail_id,jdbcType=INTEGER},
      shopping_property_id = #{shopping_property_id,jdbcType=INTEGER},
      shopping_property_value_create_time = #{shopping_property_value_create_time,jdbcType=TIMESTAMP},
      shopping_property_value_update_time = #{shopping_property_value_update_time,jdbcType=TIMESTAMP}
    where shopping_property_value_id = #{shopping_property_value_id,jdbcType=INTEGER}
  </update>
  <select id="getOrderParams" resultType="vip.incolor.entity.ShoppingPropertyValue">
    select spv.*
    from shopping_property_value as spv,
    shopping_detail as sd,
    shopping as s
    where
    s.order_id=#{oi,jdbcType=INTEGER}
    and sd.shopping_id=s.shopping_id
    and sd.shopping_property_id=spv.shopping_property_id
  </select>

  <select id="getShoppingParams" resultType="vip.incolor.entity.ShoppingPropertyValue">
    select spv.*
    from shopping_property_value as spv,
    shopping_detail as sd,
    shopping as s
    where s.shopping_id=#{si,jdbcType=INTEGER}
    and s.shopping_id=sd.shopping_id
    and sd.shopping_property_id=spv.shopping_property_id
  </select>

  <select id="getAttachValue" resultType="vip.incolor.entity.ShoppingPropertyValue">
    select spv.*
    from shopping_property_value as spv,
    shopping as s,
    shopping_detail as sd
    where s.product_id=#{pi,jdbcType=INTEGER}
    and sd.shopping_id=s.shopping_id
    and sd.shopping_property_id=spv.shopping_property_id;
  </select>

  <select id="getAttachValuePayed" resultType="vip.incolor.entity.ShoppingPropertyValue">
    select spv.*
    from shopping_property_value as spv,
    shopping as s,
    shopping_detail as sd
    where s.product_id=#{pi,jdbcType=INTEGER}
    and sd.shopping_id=s.shopping_id
    and sd.shopping_property_id=spv.shopping_property_id
    and s.orderId=#{oi,jdbcType=INTEGER}
  </select>
</mapper>